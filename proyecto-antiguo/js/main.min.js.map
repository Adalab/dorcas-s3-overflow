{"version":3,"sources":["main.js","anyadirImagen.js","skills.js","botonreset.js"],"names":[],"mappingsjjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.min.js","sourcesContent":["'use strict';\n\n\n//form diseña\nconst radio = document.querySelector(\"form__subtitle__first-color\");\nconst arrayForm = document.querySelectorAll(\".form__input\");\n\nconst saveLocalStore = (key, value) => {\n  const objetoResetInit = JSON.parse(localStorage.getItem(\"objeto-update\"));\n  objetoResetInit[key] = value;\n  localStorage.setItem(\"objeto-update\", JSON.stringify(objetoResetInit));\n}\n\nconst writeData = event => {\n  const campoModificado = event.currentTarget;\n  saveLocalStore(campoModificado.name, campoModificado.value);\n    if(campoModificado.classList.contains(\"form__input\") && !campoModificado.classList.contains(\"inputhref\")){\n     const elementInCard = document.querySelector(`.local-- ${campoModificado.name}`);\n      elementInCard.innerHTML = campoModificado.value;\n    } else if(campoModificado.classList.contains(\"inputhref\")) {\n      const hrefelement = document.querySelector(`. ${campoModificado.name} _button`);\n      if(campoModificado.name === \"email\") {\n        hrefelement.href = `mailto: ${campoModificado.value}`;\n      } else if(campoModificado.name === \"phone\"){\n        hrefelement.href = `tel: ${campoModificado.value}`;\n      } else if(campoModificado.name === \"linkedin\"){\n        hrefelement.href = `https://www.linkedin.com/in/ ${campoModificado.value}`;\n      } else {\n        hrefelement.href = `https://github.com/ ${campoModificado.value}`;\n      }\n    }\n}\n\n\nfor(let a = 0; a < arrayForm.length; a++){\n  arrayForm[a].addEventListener(\"keyup\", writeData)\n}\n\n\n//COLAPSABLES//\nconst colapsables = document.querySelectorAll('.form__fill');\nconst tituloColapsable = document.querySelectorAll('.colapsable-titulo');\n\nconst cerrarOtrosColapsables = turnArrow => {\n  for (let i = 0; i < colapsables.length; i++) {\n    colapsables[i].classList.remove('colapsable--visible');\n    turnArrow[i].classList.remove('arrow-down');\n  }\n}\n\nconst actualizarColapsable = event => {\n  //cogemos todas flechas, esto nos devuelve el grupo de flechas como un array\n  const turnArrow = document.querySelectorAll('.turn-arrow');\n  const contenedor = event.currentTarget.parentElement;\n  //en el html ponemos un data-donde a todos los elementos suceptibles de ser clikados, y recogemos el valor del data donde. los valores del data donde van a hacer match con los valores del array\n  const clikedID = contenedor.getAttribute('data-donde');\n  if (contenedor.classList.contains('colapsable--visible')) {\n    contenedor.classList.remove('colapsable--visible');\n    turnArrow[clikedID].classList.remove('arrow-down');\n  } else {\n    cerrarOtrosColapsables(turnArrow);\n    contenedor.classList.add('colapsable--visible');\n    turnArrow[clikedID].classList.add('arrow-down');\n    }\n  }\n//cogemos la flecha cuya posicion en el array sea igual al data-donde del elemento clikado y le quitamos y le ponemos la clase que la hace girar.\nfor (let i = 0; i < tituloColapsable.length; i++) {\n  tituloColapsable[i].addEventListener('click', actualizarColapsable);\n}\n\n//color radio buttom\\\nconst preview = document.querySelector('.preview');\nconst colorsP = document.querySelectorAll('.radio-color');\n//una clase -try- para dominarlos a todos\n\nconst changeColors = event => {\n  const guiltyElement = event.currentTarget;\n  const targetID = guiltyElement.getAttribute('data-donde');\n  if (guiltyElement.checked === true) {\n    preview.classList.remove('greenTarget', 'greyTarget','redTarget');\n    preview.classList.add(targetID);\n  }\n}\n\nfor (let i = 0; i < colorsP.length; i++) {\n  colorsP[i].addEventListener('click', changeColors);\n}\n\n//font radio buttom\n\nlet state;\nconst fontsP = document.querySelectorAll('.radio-font');\n//una clase -radio-font- para dominarlos a todos\nconst changeFonts = event => {\n  const guiltyElement = event.currentTarget;\n  const state = guiltyElement.checked;\n  const targetID = guiltyElement.getAttribute('data-donde');\n  if (state === true) {\n    preview.classList.remove('comicFont', 'montFont','ubuntuFont');\n    preview.classList.add(targetID);\n  }\n\n}\nfor (let i = 0; i < fontsP.length; i++) {\n  fontsP[i].addEventListener('click', changeFonts );\n}\n","'use strict';\n\n// CODIGO JS PARA AÑADIR IMAGEN\n\nconst fr = new FileReader();\n\nconst uploadBtn = document.querySelector('.action__upload-btn');\n\nconst fileField = document.querySelector('#img-selector');\nconst profileImage = document.querySelector('.profile-image__item');\n\nconst imagePreview = document.querySelector('.changeImagePreview');\n\nconst getImage = (e) => {\n  var myFile = e.currentTarget.files[0];\n  fr.addEventListener('load', writeImage);\n  fr.readAsDataURL(myFile);\n}\n\nconst writeImage= () => {\n  profileImage.src = fr.result;\n  imagePreview.src = fr.result;\n}\n\nconst fakeFileClick = () => {\n  fileField.click();\n}\n\nfileField.addEventListener('change', getImage);\nuploadBtn.addEventListener('click', fakeFileClick);\n\n\n// aqui acaba el codigo JS para añadir imagen\n","'use strict';\n\n/// CODIGO SKILLS //\nvar tagsContainer = document.querySelector('.etiquetas-habilidades-container');\nvar button = document.querySelector('.button');\nvar divMadre = document.getElementById('mama');\nvar arraySkills = [];\nvar selectSkills;\nvar contadorClases = 1;\nvar container;\nvar buttonRemove;\nvar optionAsPlaceholderText = 'Elige habilidad';\nvar currentListOfSelects;\n/////////////// FETCH PARA RECOGER LOS SKILLS DEL SERVIDOR /////////////////////////////\n\nfunction searchArray() {\n  fetch('https://raw.githubusercontent.com/Adalab/dorcas-s2-proyecto-data/master/skills.json')\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (json) {\n\n      arraySkills = json.skills;\n      arraySkills.push(optionAsPlaceholderText);\n      arraySkills.reverse();\n      createDiv();\n    });\n}\n\n\n/////////////// FIN FETCH PARA RECOGER LOS SKILLS DEL SERVIDOR /////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//// CODIGO SKILLS //\n\nfunction eliminaUltimoDiv() {\n\n  if (contadorClases > 2) {\n    var k = event.currentTarget.parentElement;\n    k.parentElement.removeChild(k);\n    button.classList.remove('hidden'); //Quita la clase Hidden si hay menos de 3 opciones para que aparezca el +\n    contadorClases--;\n\n    updateTagList();\n  } else {\n    alert(\"Tiene que introducir alguna habilidad\");\n  }\n}\n\nfunction createRemoveButton() {\n  buttonRemove = document.createElement('button');\n  buttonRemove.setAttribute(\"type\", \"button\");\n  var insertMinus = document.createElement(\"div\");\n  insertMinus.classList.add(\"content-button-habilities\");\n  var minus = document.createTextNode(\"-\");\n  insertMinus.appendChild(minus);\n  buttonRemove.appendChild(insertMinus);\n  container.appendChild(buttonRemove);\n  buttonRemove.classList.add('buttonRemove');\n  buttonRemove.addEventListener('click', eliminaUltimoDiv);\n}\n\nfunction changeSkills() {\n  //creo una etiqueta select//\n  selectSkills = document.createElement('select');\n  selectSkills.setAttribute('name', 'hola');\n  selectSkills.classList.add(\"form__select\");\n  container.appendChild(selectSkills);\n\n  //bucle para rellenar el select con tantos options como colores haya en el arrayColors//\n  for (var i = 0; i < arraySkills.length; i++) {\n    //creamos el elemento option//\n    var option = document.createElement('option');\n    //creamos el texto de dentro del option, en este caso lo rellenamos con los strings que hay en arraySkills//\n    var insertSkillToOption = document.createTextNode(arraySkills[i]);\n    //Metemos los Strings dentro de los options//\n    option.appendChild(insertSkillToOption);\n    // metemoslos options dentro de los select//\n    selectSkills.appendChild(option);\n    selectSkills.addEventListener('change', updateTagList);\n  }\n}\n\nfunction createDiv() {\n\n  if (contadorClases < 3) {\n    //creo un div//\n    container = document.createElement('div');\n    container.classList.add('container');\n    divMadre.appendChild(container);\n    changeSkills();\n    createRemoveButton();\n    contadorClases++;\n  } else if (contadorClases === 3) {\n    button.classList.add('hidden');\n\n    container = document.createElement('div');\n    container.classList.add('container');\n    divMadre.appendChild(container);\n\n    changeSkills();\n    createRemoveButton();\n\n    contadorClases++;\n  } else {\n    alert('Tiene que introducir alguna habilidad');\n  }\n}\n\nsearchArray();\nbutton.addEventListener('click', createDiv);\n\n////////////// AÑADIR A LA TARJETA ///////////////////\n\n\nconst updateTagList = () => {\n  currentListOfSelects = document.querySelectorAll('.form__select');\n  tagsContainer.innerHTML = ''; //limpio los skills del preview\n\n  for (const currentSelect of currentListOfSelects) {\n    if (currentSelect.value !== optionAsPlaceholderText) {\n      tagsContainer.innerHTML += `<li class=\"etiqueta-habilidad\"> ${currentSelect.value} </li>`;\n    }\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////\n////////// ENVIO AL SERVIDOR /////////////////////////////////////////////////////////\n\nconst submitButton = document.querySelector('#submit');\nconst responseURL = document.querySelector('.response');\nconst form = document.querySelector('form');\n\nconst sendData = () => {\n  const inputs = Array.from(form.elements);\n  const json = getJSONFromInputs(inputs);\n  json.skills = [];\n  for (const currentSelect of  currentListOfSelects) {\n\n    json.skills.push(currentSelect.value);\n  }\n\n\n  json.photo = fr.result;\n  sendRequest(json);\n}\n\nconst loadPhoto = () => {\n\n  const myFile = document.querySelector('#img-selector').files[0];\n  fr.addEventListener('load', sendData);\n  fr.readAsDataURL(myFile);\n}\n\nsubmitButton.addEventListener('click', loadPhoto);\n\nconst getJSONFromInputs = (inputs) => {\n  console.log(inputs);\n  return inputs.reduce(function (acc, val) {\n    if (val.type === 'radio' && val.checked === true) {\n      acc[val.name] = val.value;\n    }\n    if ((val.nodeName !== 'BUTTON') && (val.nodeName !== 'FIELDSET') && (val.type !== 'radio')) {\n      acc[val.name] = val.value;\n    }\n\n    return acc;\n  }, {});\n}\n\n\nconst sendRequest = (json) => {\n  fetch('https://us-central1-awesome-cards-cf6f0.cloudfunctions.net/card/', {\n      method: 'POST',\n      body: JSON.stringify(json),\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n    .then(function (resp) {\n      return resp.json();\n    })\n    .then(function (result) {\n      showURL(result);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nvar twitterURL;\n\nconst showURL = (result) => {\n  if (result.success) {\n    responseURL.innerHTML = `La tarjeta ha sido creada: <br> <a href= ${result.cardURL} >  Haga click aquí </a>`;\n  } else {\n    responseURL.innerHTML = `ERROR: ${result.error}`;\n  }\n  twitterURL = result.cardURL;\n}\n\n\nconst buttonTwitter = document.querySelector('.maketwitter');\n\nconst shareOnTwitter = () => {\n  buttonTwitter.href = `https://twitter.com/intent/tweet?url= ${twitterURL} &text=Acabo%20de%20crear%20mi%20tarjeta%20con%20Font%20Awesome%20de%20Tarjetas-Martirio&hashtags=WomenInTech`;\n}\n\nbuttonTwitter.addEventListener('click', shareOnTwitter);\n","'use strict';\n\n\nvar botonReset = document.querySelector(\".button-reset__title\");\n\n\n//reset target\nfunction callLocalStore() {\n    var objetoReset = JSON.parse(localStorage.getItem(\"objeto-reset\"));\n    var imagePreviewReset = document.querySelector('.changeImagePreview');\n    var profileImage = document.querySelector('.profile-image__item');\n    profileImage.src = objetoReset.photo;\n    imagePreview.src = objetoReset.photo;\n    for(var i in objetoReset){\n       var classReset= document.querySelector(\".local--\" + i);\n        var inputReset= document.querySelector(\".local--input--\" + i);\n       if (i !== \"palette\" && i !== \"typography\" && i !== \"photo\"){\n       console.log(i)\n     inputReset.value = \"\";}\n       \n    if(classReset.classList.contains('local--photo')){\n        classReset.src = objetoReset[i];\n        \n    }\n    else if (classReset.classList.contains('local--email')){\n        classReset.href = 'mailto:' + objetoReset[i];\n        \n    }\n    else if (classReset.classList.contains('local--phone')){\n        classReset.href = 'tel:' + objetoReset[i];\n        \n    }\n    else if (classReset.classList.contains('local--linkedin')){\n        classReset.href =  objetoReset[i];\n        \n    }\n    else if (classReset.classList.contains('local--github')){\n        classReset.href =  objetoReset[i];\n        \n    }\n    else if (classReset.classList.contains('local--palette')){\n         var resetColorP = document.querySelectorAll('.radio-color');\n        classReset.value =  objetoReset[i];\n        var botonNumberC = classReset.value;\n        resetColorP[botonNumberC].checked = false;\n        preview.classList.remove('redTarget', 'greyTarget');\n        preview.classList.add('greenTarget');\n        var buttonDefaultColor = document.getElementById('form__subtitle__first-color');\n        buttonDefaultColor.checked = true; \n        \n    }\n    else if (classReset.classList.contains('local--typography')){\n        var resetFotnP = document.querySelectorAll('.radio-font');\n        classReset.value =  objetoReset[i];\n        var botonNumber = classReset.value;\n        resetFotnP[botonNumber].checked = false;\n        preview.classList.remove('montFont','ubuntuFont');\n        preview.classList.add('comicFont');\n        var buttonDefault = document.getElementById('form__subtitle__second-font');\n        buttonDefault.checked = true;\n    }\n    \n        else {\n        classReset.innerHTML = objetoReset[i];\n     } \n    }\n   \n}\n\n\nbotonReset.addEventListener(\"click\", callLocalStore)\n\nfunction sendObjectReset() {\n    var objetoReset = {\n        \"name\" : \"Martirio\",\n        \"job\": \"Reina de la canción\",\n         \"phone\": \"982938437\",\n         \"email\": \"reinadelacopla@ole.es\",\n         \"linkedin\": \"juanita.reina\",\n         \"github\": \"juanita-reina\",\n         \"palette\": \"1\",\n         \"typography\": \"2\",\n        \"photo\": \"../images/martirio.jpg\",\n        //\"skills\": [\"HTML\", \"Sass\", \"JavaScript\"]\n      };\nlocalStorage.setItem(\"objeto-reset\", JSON.stringify(objetoReset));\n\nif (localStorage.getItem(\"objeto-update\")=== null){\n    localStorage.setItem(\"objeto-update\", JSON.stringify(objetoReset));\n}\n}\nsendObjectReset();\n\n"]}